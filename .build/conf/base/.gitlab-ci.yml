base-ubuntu.build:
  stage: build
  image: docker
  services:
    - name: docker:dind
      command: [ "--experimental" ]
  allow_failure: true
  variables:
    DOCKER_HOST: tcp://docker:2375
    IMAGE_TAG: "$CI_REGISTRY_IMAGE:base-ubuntu"
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --no-cache -t $IMAGE_TAG -f build-conf/base/ubuntu/20-04/build.Dockerfile build-src
#    - docker run -e DOCKER_HOST=tcp://$(grep docker /etc/hosts | cut -f1):2375 dslim/docker-slim build --remove-file-artifacts --publish-exposed-ports --http-probe-off --pull --target "$IMAGE_TAG" --tag "$IMAGE_TAG"
    - docker push "$IMAGE_TAG"
  rules:
    - changes:
        - build-conf/base/ubuntu/20-04/build.Dockerfile
        - build-conf/base/.gitlab-ci.yml

base-ubuntu.deploy:
  stage: deploy
  needs: ["base-ubuntu.build"]
  image: docker
  variables:
    DOCKER_HOST: tcp://docker:2375
    IMAGE_TAG: "$CI_REGISTRY_IMAGE:base-ubuntu"
  services:
    - name: docker:dind
      command: [ "--experimental" ]
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker login -u "$DOCKER_REGISTRY_USER" -p "$DOCKER_REGISTRY_PASSWORD" $DOCKER_REGISTRY
  script:
    - docker pull $IMAGE_TAG
    - docker tag $IMAGE_TAG $DOCKER_REGISTRY_IMAGE:base-ubuntu
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_IMAGE:base-ubuntu
  environment:
    name: base-ubuntu
  rules:
    - if: $CI_COMMIT_BRANCH == 'main'
      changes:
        - build-conf/base/ubuntu/20-04/build.Dockerfile
        - build-conf/base/.gitlab-ci.yml
